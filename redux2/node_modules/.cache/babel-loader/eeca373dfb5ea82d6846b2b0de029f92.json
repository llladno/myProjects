{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\redux2\\\\src\\\\components\\\\todoList.tsx\";\nimport React, { useEffect } from 'react';\nimport { useTypedSelector } from \"../hooks/useTypeSelector\";\nimport { useAction } from \"../hooks/useAction\";\nconst TodoList = () => {\n  const {\n    page,\n    error,\n    loading,\n    todos,\n    limit\n  } = useTypedSelector(state => state.todo);\n  const {\n    fetchTodo\n  } = useAction();\n  useEffect(() => {\n    fetchTodo(page, limit);\n    console.log(todos);\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 16\n      }\n    }, \"\\u0418\\u0434\\u0451\\u0442 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430....\");\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }\n    }, error);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, todos.map(todo => /*#__PURE__*/React.createElement(\"div\", {\n    key: todo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 38\n    }\n  }, todo.id, \" - \", todo.title)));\n};\nexport default TodoList;","map":{"version":3,"names":["React","useEffect","useTypedSelector","useAction","TodoList","page","error","loading","todos","limit","state","todo","fetchTodo","console","log","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","key","id","title"],"sources":["F:/projects/redux2/src/components/todoList.tsx"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport {useTypedSelector} from \"../hooks/useTypeSelector\";\r\nimport {useAction} from \"../hooks/useAction\";\r\n\r\nconst TodoList:React.FC = () => {\r\n    const {page, error, loading, todos, limit} = useTypedSelector(state => state.todo)\r\nconst {fetchTodo} = useAction()\r\n\r\n    useEffect(()=>{\r\n        fetchTodo(page, limit)\r\n        console.log(todos)\r\n    }, [])\r\n\r\n\r\n    if (loading) {\r\n        return <h1>Идёт загрузка....</h1>\r\n    }\r\n    if (error) {\r\n        return <h1>{error}</h1>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {todos.map((todo:any) => <div\r\n            key={todo.id}>{todo.id} - {todo.title}\r\n            </div>)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAAQC,gBAAgB,QAAO,0BAA0B;AACzD,SAAQC,SAAS,QAAO,oBAAoB;AAE5C,MAAMC,QAAiB,GAAGA,CAAA,KAAM;EAC5B,MAAM;IAACC,IAAI;IAAEC,KAAK;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGP,gBAAgB,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EACtF,MAAM;IAACC;EAAS,CAAC,GAAGT,SAAS,CAAC,CAAC;EAE3BF,SAAS,CAAC,MAAI;IACVW,SAAS,CAACP,IAAI,EAAEI,KAAK,CAAC;IACtBI,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAGN,IAAID,OAAO,EAAE;IACT,oBAAOP,KAAA,CAAAe,aAAA;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,+EAAqB,CAAC;EACrC;EACA,IAAIf,KAAK,EAAE;IACP,oBAAON,KAAA,CAAAe,aAAA;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAKf,KAAU,CAAC;EAC3B;EAEA,oBACIN,KAAA,CAAAe,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACKb,KAAK,CAACc,GAAG,CAAEX,IAAQ,iBAAKX,KAAA,CAAAe,aAAA;IACzBQ,GAAG,EAAEZ,IAAI,CAACa,EAAG;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEV,IAAI,CAACa,EAAE,EAAC,KAAG,EAACb,IAAI,CAACc,KAC3B,CAAC,CACL,CAAC;AAEd,CAAC;AAED,eAAerB,QAAQ"},"metadata":{},"sourceType":"module"}